function [peakd,Qm,RZZ,rapsp,rapspcn]	=...
    Murat_components(comp,peakd,Qm,RZZ,rapsp,rapspcn)
%% Creates data vector for two- and three-component recording

dataL                                   =   size(peakd,1);

% 2 components (typically [WE, SN]) - average the data
if comp ==  2
    
    peakd                               =...
        (peakd(1:comp:dataL-1,:) + peakd(2:comp:dataL,:))/2;
    Qm                                  =...
        (Qm(1:comp:dataL-1,:) + Qm(2:comp:dataL,:))/2;
    RZZ                                 =...
        (RZZ(1:comp:dataL-1,:) + RZZ(2:comp:dataL,:))/2;
    rapsp                               =...
        (rapsp(1:comp:dataL-1,:) + rapsp(2:comp:dataL,:))/2;
    rapspcn                             =...
        (rapspcn(1:comp:dataL-1,:) + rapspcn(2:comp:dataL,:))/2;
    
    % 3 components (WE, SN, Z) - average the H data first
elseif comp == 3
    
    %Averaging the horizontals before the vertical
    peakd                               =...
        ((peakd(1:comp:dataL-2,:) + peakd(2:comp:dataL-1,:))/2 +....
        peakd(3:comp:dataL,:))/2;
    Qm                                  =...
        ((Qm(1:comp:dataL-2,:) + Qm(2:comp:dataL-1,:))/2 +....
        Qm(3:comp:dataL,:))/2;
    RZZ                                 =...
        ((RZZ(1:comp:dataL-2,:) + RZZ(2:comp:dataL-1,:))/2 +....
        RZZ(3:comp:dataL,:))/2;
    rapsp                               =...
        ((rapsp(1:comp:dataL-2,:) + rapsp(2:comp:dataL-1,:))/2 +....
        rapsp(3:comp:dataL,:))/2;
    rapspcn                             =...
        ((rapspcn(1:comp:dataL-2,:) + rapspcn(2:comp:dataL-1,:))/2 +....
        rapspcn(3:comp:dataL,:))/2;
    
end

end